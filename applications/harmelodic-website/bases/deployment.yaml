apiVersion: apps/v1
kind: Deployment
metadata:
  name: website
spec:
  selector:
    matchLabels:
      app: website
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: website
    spec:
      serviceAccountName: website
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: false # nginx (base image) wants to run master process as root
        runAsUser: 0 # nginx (base image) wants to run master process as root
        runAsGroup: 3000
        fsGroup: 2000
      containers:
        - name: website
          image: "europe-north1-docker.pkg.dev/personal-artifacts-353012/harmelodic/website:latest"
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: http
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              memory: 10Mi
          startupProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 5
            httpGet:
              port: 80
              path: /health
          livenessProbe:
            periodSeconds: 30
            failureThreshold: 5
            httpGet:
              port: 80
              path: /health
          readinessProbe:
            periodSeconds: 10
            failureThreshold: 60
            httpGet:
              port: 80
              path: /health
          securityContext:
            allowPrivilegeEscalation: true # nginx (base image) wants to run master process as root
            privileged: true # nginx (base image) wants to run master process as root
            readOnlyRootFilesystem: false # nginx (base image) wants to create temp files
            capabilities:
              drop:
                - ALL
